#!/usr/bin/env python2

# Copyright (c) 2016, Robert Escriva, Cornell University
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Consus nor the names of its contributors may be
#       used to endorse or promote products derived from this software without
#       specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import glob
import os
import os.path

# (file relative to test/, # nodes, # data centers)
GREMLINS = [
    ('1-node-1-dc-cluster.gremlin', 1, 1),
    ('2-node-1-dc-cluster.gremlin', 2, 1),
    ('3-node-1-dc-cluster.gremlin', 3, 1),
    ('4-node-1-dc-cluster.gremlin', 4, 1),
    ('5-node-1-dc-cluster.gremlin', 5, 1),

    ('1-node-1-dc-cluster.gremlin', 1, 1),
    ('1-node-2-dc-cluster.gremlin', 1, 2),
    ('1-node-3-dc-cluster.gremlin', 1, 3),
    ('1-node-4-dc-cluster.gremlin', 1, 4),
    ('1-node-5-dc-cluster.gremlin', 1, 5),
    ('1-node-6-dc-cluster.gremlin', 1, 6),
    ('1-node-7-dc-cluster.gremlin', 1, 7),

    ('3-node-1-dc-cluster.gremlin', 3, 1),
    ('3-node-2-dc-cluster.gremlin', 3, 2),
    ('3-node-3-dc-cluster.gremlin', 3, 3),
    ('3-node-4-dc-cluster.gremlin', 3, 4),
    ('3-node-5-dc-cluster.gremlin', 3, 5),
    ('3-node-6-dc-cluster.gremlin', 3, 6),
    ('3-node-7-dc-cluster.gremlin', 3, 7),

    ('5-node-1-dc-cluster.gremlin', 5, 1),
    ('5-node-2-dc-cluster.gremlin', 5, 2),
    ('5-node-3-dc-cluster.gremlin', 5, 3),
    ('5-node-4-dc-cluster.gremlin', 5, 4),
    ('5-node-5-dc-cluster.gremlin', 5, 5),
    ('5-node-6-dc-cluster.gremlin', 5, 6),
    ('5-node-7-dc-cluster.gremlin', 5, 7),
]

files = set()

for gremlin, nodes, dcs in GREMLINS:
    for x in glob.glob('test/unit/*.py'):
        path = os.path.splitext(x)[0]
        path += '.%dn.%ddc.gremlin' % (nodes, dcs)
        f = open(path, 'w')
        f.write('''#!/usr/bin/env gremlin
include ../{gremlin}
timeout 300
run python ${{CONSUS_SRCDIR}}/{python}
'''.format(gremlin=gremlin, python=x))
        f.flush()
        f.close()
        os.chmod(path, 0755)
        files.add(path)

gremlins = ''
for path in ['test/' + g[0] for g in GREMLINS] + sorted(files):
    gremlins += 'gremlins += %s\n' % path
START = '### begin automatically generated gremlins\n'
END = '### end automatically generated gremlins\n'
text = open('Makefile.am').read()
head, tail = text.split(START)
body, tail = tail.split(END)
open('Makefile.am', 'w').write(head + START + gremlins + END + tail)
